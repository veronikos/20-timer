{"version":3,"sources":["components/Display.jsx","components/timer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Display","props","className","Math","floor","time","slice","Timer","useState","second","setSecond","autoStart","isStart","setStart","useEffect","setTimeout","step","textButton","disabledRestart","onClick","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAEaA,EAAU,SAACC,GACpB,OACI,sBAAKC,UAAU,UAAf,UACI,kCACI,6BAAK,IAAMC,KAAKC,MAAOH,EAAMI,KAAO,IAAS,KAAKC,OAAO,GAAI,QAEjE,kCACI,6BAAK,IAAMH,KAAKC,MAAOH,EAAMI,KAAO,IAAQ,KAAKC,OAAO,GAAK,QAEjE,kCACI,6BAAK,IAAQL,EAAMI,KAAO,GAAM,KAAMC,OAAO,WCThDC,EAAQ,SAACN,GAAW,IAAD,EACFO,mBAASP,EAAMI,MADb,mBACvBI,EADuB,KACfC,EADe,OAEVF,mBAASP,EAAMU,WAA5BA,EAFuB,sBAGFH,mBAASG,GAHP,mBAGvBC,EAHuB,KAGdC,EAHc,KAK9BC,qBAAW,WACLF,GACEG,YAAW,WACXN,EAAS,GACVC,EAAUD,EAASR,EAAMe,QAE3B,QAIP,IAAMC,EAAaL,EAAU,OAAS,QAChCM,EAA6B,IAAXT,EAEtB,OACE,sBAAKP,UAAU,MAAf,UACE,wBAAQA,UAAU,MAAMiB,QAAS,kBAAMN,GAAUD,IAAjD,SAA4DK,IAC5D,wBAAQf,UAAU,MAAMiB,QAAS,WAC/BT,EAAUT,EAAMI,MAChBQ,GAAS,IACRO,SAAUF,EAHb,qBAIa,IAAXT,EAAe,aAAe,cAAC,EAAD,CAASJ,KAAMI,QCjBtCY,MATf,WACE,OACE,sBAAKnB,UAAU,MAAf,UACI,cAAC,EAAD,CAAOG,KAAM,IAAMW,KAAM,IAAML,WAAW,IAC1C,cAAC,EAAD,CAAON,KAAM,IAAOW,KAAM,IAAML,WAAW,QCMpCW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d124e9a3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Display = (props) => {\r\n    return(\r\n        <div className='display'>\r\n            <section>\r\n                <p>{(\"0\" + Math.floor((props.time / 60000) % 60)).slice(-2)+ \":\"}</p>\r\n            </section>\r\n            <section>\r\n                <p>{(\"0\" + Math.floor((props.time / 1000) % 60)).slice(-2) + \":\"}</p>\r\n            </section>\r\n            <section>\r\n                <p>{(\"0\" + ((props.time / 10) % 100)).slice(-2)}</p>\r\n            </section>\r\n        </div>\r\n    );\r\n}","import React, {useState, useEffect} from \"react\";\r\nimport { Display } from \"./Display\";\r\n\r\nexport const Timer = (props) => {\r\n  const [second, setSecond] = useState(props.time)\r\n  const [autoStart] = useState(props.autoStart)\r\n  const [isStart, setStart] = useState(autoStart)\r\n\r\n  useEffect (() => {\r\n    if (isStart) {\r\n          setTimeout(() => {\r\n      if (second > 0) {\r\n         setSecond(second - props.step)\r\n      }\r\n    }, 1000);\r\n    }\r\n  })\r\n\r\nconst textButton = isStart ? 'Stop' : 'Start'\r\nconst disabledRestart = second === 0 ? false : true\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <button className=\"btn\" onClick={() => setStart(!isStart)}>{textButton}</button>\r\n      <button className=\"btn\" onClick={() => {\r\n        setSecond(props.time);\r\n        setStart(true)\r\n      }} disabled={disabledRestart}>Restart</button>\r\n       {second === 0 ? 'Time is up' : <Display time={second} />}\r\n    </div>\r\n  )\r\n}","import { Timer } from './components/timer'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Timer time={6000} step={1000} autoStart={false} />\r\n        <Timer time={90000} step={1000} autoStart={true} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}